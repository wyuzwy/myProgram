<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhangwenyu.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.zhangwenyu.bean.Student">
    <id column="xh" jdbcType="VARCHAR" property="xh" />
    <result column="xm" jdbcType="VARCHAR" property="xm" />
    <result column="xb" jdbcType="INTEGER" property="xb" />
    <result column="sfzh" jdbcType="VARCHAR" property="sfzh" />
    <result column="csrq" jdbcType="VARCHAR" property="csrq" />
    <result column="zzmm" jdbcType="VARCHAR" property="zzmm" />
    <result column="mz" jdbcType="VARCHAR" property="mz" />
    <result column="syd" jdbcType="VARCHAR" property="syd" />
    <result column="sjhm" jdbcType="VARCHAR" property="sjhm" />
    <result column="dzyx" jdbcType="VARCHAR" property="dzyx" />
    <result column="jtdz" jdbcType="VARCHAR" property="jtdz" />
    <result column="jtyb" jdbcType="VARCHAR" property="jtyb" />
    <result column="xxmc" jdbcType="VARCHAR" property="xxmc" />
    <result column="xq" jdbcType="VARCHAR" property="xq" />
    <result column="xy" jdbcType="VARCHAR" property="xy" />
    <result column="xl" jdbcType="VARCHAR" property="xl" />
    <result column="xz" jdbcType="VARCHAR" property="xz" />
    <result column="zy" jdbcType="VARCHAR" property="zy" />
    <result column="bj" jdbcType="VARCHAR" property="bj" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="confirm_dept" jdbcType="VARCHAR" property="confirmDept" />
    <result column="confirm_name" jdbcType="VARCHAR" property="confirmName" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="ensure_time" jdbcType="VARCHAR" property="ensureTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="backup" jdbcType="VARCHAR" property="backup" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    xh, xm, xb, sfzh, csrq, zzmm, mz, syd, sjhm, dzyx, jtdz, jtyb, xxmc, xq, xy, xl, 
    xz, zy, bj, status, confirm_dept, confirm_name, create_time, ensure_time, remark, 
    backup
  </sql>
  <select id="selectByExample" parameterType="com.zhangwenyu.bean.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>


  <select id="searchByCondition" parameterType="com.zhangwenyu.bean.Student" resultMap="BaseResultMap">
    select * from student where 1 = 1

    <if test="xh!=null">
      <if test="xh!=''">
        and xh  LIKE CONCAT(CONCAT('%',#{xh},'%'))
      </if>
    </if>
    <if test="xm!=null">
      <if test="xm!=''">
        and xm  LIKE CONCAT(CONCAT('%',#{xm},'%'))
      </if>
    </if>
    <if test="xy!=null">
      <if test="xy!=''">
        and xy = #{xy,jdbcType=VARCHAR}
      </if>
    </if>
    <if test="status != null ">
      <if test="status != -1">
        and status = #{status,jdbcType=INTEGER}
      </if>
    </if>

    order by status asc
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where xh = #{xh,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where xh = #{xh,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zhangwenyu.bean.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zhangwenyu.bean.Student">
    insert into student (xh, xm, xb, sfzh, 
      csrq, zzmm, mz, syd, 
      sjhm, dzyx, jtdz, jtyb, 
      xxmc, xq, xy, xl, 
      xz, zy, bj, status, 
      confirm_dept, confirm_name, create_time, 
      ensure_time, remark, backup
      )
    values (#{xh,jdbcType=VARCHAR}, #{xm,jdbcType=VARCHAR}, #{xb,jdbcType=INTEGER}, #{sfzh,jdbcType=VARCHAR}, 
      #{csrq,jdbcType=VARCHAR}, #{zzmm,jdbcType=VARCHAR}, #{mz,jdbcType=VARCHAR}, #{syd,jdbcType=VARCHAR}, 
      #{sjhm,jdbcType=VARCHAR}, #{dzyx,jdbcType=VARCHAR}, #{jtdz,jdbcType=VARCHAR}, #{jtyb,jdbcType=VARCHAR}, 
      #{xxmc,jdbcType=VARCHAR}, #{xq,jdbcType=VARCHAR}, #{xy,jdbcType=VARCHAR}, #{xl,jdbcType=VARCHAR}, 
      #{xz,jdbcType=VARCHAR}, #{zy,jdbcType=VARCHAR}, #{bj,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{confirmDept,jdbcType=VARCHAR}, #{confirmName,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{ensureTime,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{backup,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhangwenyu.bean.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="xh != null">
        xh,
      </if>
      <if test="xm != null">
        xm,
      </if>
      <if test="xb != null">
        xb,
      </if>
      <if test="sfzh != null">
        sfzh,
      </if>
      <if test="csrq != null">
        csrq,
      </if>
      <if test="zzmm != null">
        zzmm,
      </if>
      <if test="mz != null">
        mz,
      </if>
      <if test="syd != null">
        syd,
      </if>
      <if test="sjhm != null">
        sjhm,
      </if>
      <if test="dzyx != null">
        dzyx,
      </if>
      <if test="jtdz != null">
        jtdz,
      </if>
      <if test="jtyb != null">
        jtyb,
      </if>
      <if test="xxmc != null">
        xxmc,
      </if>
      <if test="xq != null">
        xq,
      </if>
      <if test="xy != null">
        xy,
      </if>
      <if test="xl != null">
        xl,
      </if>
      <if test="xz != null">
        xz,
      </if>
      <if test="zy != null">
        zy,
      </if>
      <if test="bj != null">
        bj,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="confirmDept != null">
        confirm_dept,
      </if>
      <if test="confirmName != null">
        confirm_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="ensureTime != null">
        ensure_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="backup != null">
        backup,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="xh != null">
        #{xh,jdbcType=VARCHAR},
      </if>
      <if test="xm != null">
        #{xm,jdbcType=VARCHAR},
      </if>
      <if test="xb != null">
        #{xb,jdbcType=INTEGER},
      </if>
      <if test="sfzh != null">
        #{sfzh,jdbcType=VARCHAR},
      </if>
      <if test="csrq != null">
        #{csrq,jdbcType=VARCHAR},
      </if>
      <if test="zzmm != null">
        #{zzmm,jdbcType=VARCHAR},
      </if>
      <if test="mz != null">
        #{mz,jdbcType=VARCHAR},
      </if>
      <if test="syd != null">
        #{syd,jdbcType=VARCHAR},
      </if>
      <if test="sjhm != null">
        #{sjhm,jdbcType=VARCHAR},
      </if>
      <if test="dzyx != null">
        #{dzyx,jdbcType=VARCHAR},
      </if>
      <if test="jtdz != null">
        #{jtdz,jdbcType=VARCHAR},
      </if>
      <if test="jtyb != null">
        #{jtyb,jdbcType=VARCHAR},
      </if>
      <if test="xxmc != null">
        #{xxmc,jdbcType=VARCHAR},
      </if>
      <if test="xq != null">
        #{xq,jdbcType=VARCHAR},
      </if>
      <if test="xy != null">
        #{xy,jdbcType=VARCHAR},
      </if>
      <if test="xl != null">
        #{xl,jdbcType=VARCHAR},
      </if>
      <if test="xz != null">
        #{xz,jdbcType=VARCHAR},
      </if>
      <if test="zy != null">
        #{zy,jdbcType=VARCHAR},
      </if>
      <if test="bj != null">
        #{bj,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="confirmDept != null">
        #{confirmDept,jdbcType=VARCHAR},
      </if>
      <if test="confirmName != null">
        #{confirmName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="ensureTime != null">
        #{ensureTime,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="backup != null">
        #{backup,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zhangwenyu.bean.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.xh != null">
        xh = #{record.xh,jdbcType=VARCHAR},
      </if>
      <if test="record.xm != null">
        xm = #{record.xm,jdbcType=VARCHAR},
      </if>
      <if test="record.xb != null">
        xb = #{record.xb,jdbcType=INTEGER},
      </if>
      <if test="record.sfzh != null">
        sfzh = #{record.sfzh,jdbcType=VARCHAR},
      </if>
      <if test="record.csrq != null">
        csrq = #{record.csrq,jdbcType=VARCHAR},
      </if>
      <if test="record.zzmm != null">
        zzmm = #{record.zzmm,jdbcType=VARCHAR},
      </if>
      <if test="record.mz != null">
        mz = #{record.mz,jdbcType=VARCHAR},
      </if>
      <if test="record.syd != null">
        syd = #{record.syd,jdbcType=VARCHAR},
      </if>
      <if test="record.sjhm != null">
        sjhm = #{record.sjhm,jdbcType=VARCHAR},
      </if>
      <if test="record.dzyx != null">
        dzyx = #{record.dzyx,jdbcType=VARCHAR},
      </if>
      <if test="record.jtdz != null">
        jtdz = #{record.jtdz,jdbcType=VARCHAR},
      </if>
      <if test="record.jtyb != null">
        jtyb = #{record.jtyb,jdbcType=VARCHAR},
      </if>
      <if test="record.xxmc != null">
        xxmc = #{record.xxmc,jdbcType=VARCHAR},
      </if>
      <if test="record.xq != null">
        xq = #{record.xq,jdbcType=VARCHAR},
      </if>
      <if test="record.xy != null">
        xy = #{record.xy,jdbcType=VARCHAR},
      </if>
      <if test="record.xl != null">
        xl = #{record.xl,jdbcType=VARCHAR},
      </if>
      <if test="record.xz != null">
        xz = #{record.xz,jdbcType=VARCHAR},
      </if>
      <if test="record.zy != null">
        zy = #{record.zy,jdbcType=VARCHAR},
      </if>
      <if test="record.bj != null">
        bj = #{record.bj,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.confirmDept != null">
        confirm_dept = #{record.confirmDept,jdbcType=VARCHAR},
      </if>
      <if test="record.confirmName != null">
        confirm_name = #{record.confirmName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.ensureTime != null">
        ensure_time = #{record.ensureTime,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.backup != null">
        backup = #{record.backup,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set xh = #{record.xh,jdbcType=VARCHAR},
      xm = #{record.xm,jdbcType=VARCHAR},
      xb = #{record.xb,jdbcType=INTEGER},
      sfzh = #{record.sfzh,jdbcType=VARCHAR},
      csrq = #{record.csrq,jdbcType=VARCHAR},
      zzmm = #{record.zzmm,jdbcType=VARCHAR},
      mz = #{record.mz,jdbcType=VARCHAR},
      syd = #{record.syd,jdbcType=VARCHAR},
      sjhm = #{record.sjhm,jdbcType=VARCHAR},
      dzyx = #{record.dzyx,jdbcType=VARCHAR},
      jtdz = #{record.jtdz,jdbcType=VARCHAR},
      jtyb = #{record.jtyb,jdbcType=VARCHAR},
      xxmc = #{record.xxmc,jdbcType=VARCHAR},
      xq = #{record.xq,jdbcType=VARCHAR},
      xy = #{record.xy,jdbcType=VARCHAR},
      xl = #{record.xl,jdbcType=VARCHAR},
      xz = #{record.xz,jdbcType=VARCHAR},
      zy = #{record.zy,jdbcType=VARCHAR},
      bj = #{record.bj,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      confirm_dept = #{record.confirmDept,jdbcType=VARCHAR},
      confirm_name = #{record.confirmName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      ensure_time = #{record.ensureTime,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      backup = #{record.backup,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhangwenyu.bean.Student">
    update student
    <set>
      <if test="xm != null">
        xm = #{xm,jdbcType=VARCHAR},
      </if>
      <if test="xb != null">
        xb = #{xb,jdbcType=INTEGER},
      </if>
      <if test="sfzh != null">
        sfzh = #{sfzh,jdbcType=VARCHAR},
      </if>
      <if test="csrq != null">
        csrq = #{csrq,jdbcType=VARCHAR},
      </if>
      <if test="zzmm != null">
        zzmm = #{zzmm,jdbcType=VARCHAR},
      </if>
      <if test="mz != null">
        mz = #{mz,jdbcType=VARCHAR},
      </if>
      <if test="syd != null">
        syd = #{syd,jdbcType=VARCHAR},
      </if>
      <if test="sjhm != null">
        sjhm = #{sjhm,jdbcType=VARCHAR},
      </if>
      <if test="dzyx != null">
        dzyx = #{dzyx,jdbcType=VARCHAR},
      </if>
      <if test="jtdz != null">
        jtdz = #{jtdz,jdbcType=VARCHAR},
      </if>
      <if test="jtyb != null">
        jtyb = #{jtyb,jdbcType=VARCHAR},
      </if>
      <if test="xxmc != null">
        xxmc = #{xxmc,jdbcType=VARCHAR},
      </if>
      <if test="xq != null">
        xq = #{xq,jdbcType=VARCHAR},
      </if>
      <if test="xy != null">
        xy = #{xy,jdbcType=VARCHAR},
      </if>
      <if test="xl != null">
        xl = #{xl,jdbcType=VARCHAR},
      </if>
      <if test="xz != null">
        xz = #{xz,jdbcType=VARCHAR},
      </if>
      <if test="zy != null">
        zy = #{zy,jdbcType=VARCHAR},
      </if>
      <if test="bj != null">
        bj = #{bj,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="confirmDept != null">
        confirm_dept = #{confirmDept,jdbcType=VARCHAR},
      </if>
      <if test="confirmName != null">
        confirm_name = #{confirmName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="ensureTime != null">
        ensure_time = #{ensureTime,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="backup != null">
        backup = #{backup,jdbcType=VARCHAR},
      </if>
    </set>
    where xh = #{xh,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhangwenyu.bean.Student">
    update student
    set xm = #{xm,jdbcType=VARCHAR},
      xb = #{xb,jdbcType=INTEGER},
      sfzh = #{sfzh,jdbcType=VARCHAR},
      csrq = #{csrq,jdbcType=VARCHAR},
      zzmm = #{zzmm,jdbcType=VARCHAR},
      mz = #{mz,jdbcType=VARCHAR},
      syd = #{syd,jdbcType=VARCHAR},
      sjhm = #{sjhm,jdbcType=VARCHAR},
      dzyx = #{dzyx,jdbcType=VARCHAR},
      jtdz = #{jtdz,jdbcType=VARCHAR},
      jtyb = #{jtyb,jdbcType=VARCHAR},
      xxmc = #{xxmc,jdbcType=VARCHAR},
      xq = #{xq,jdbcType=VARCHAR},
      xy = #{xy,jdbcType=VARCHAR},
      xl = #{xl,jdbcType=VARCHAR},
      xz = #{xz,jdbcType=VARCHAR},
      zy = #{zy,jdbcType=VARCHAR},
      bj = #{bj,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      confirm_dept = #{confirmDept,jdbcType=VARCHAR},
      confirm_name = #{confirmName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      ensure_time = #{ensureTime,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      backup = #{backup,jdbcType=VARCHAR}
    where xh = #{xh,jdbcType=VARCHAR}
  </update>
</mapper>