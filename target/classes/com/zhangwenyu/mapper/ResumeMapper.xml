<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhangwenyu.dao.ResumeMapper">
  <resultMap id="BaseResultMap" type="com.zhangwenyu.bean.Resume">
    <id column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="resume_name" jdbcType="VARCHAR" property="resumeName" />
    <result column="resume_url" jdbcType="VARCHAR" property="resumeUrl" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="backup" jdbcType="VARCHAR" property="backup" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    student_id, resume_name, resume_url, create_time, backup
  </sql>
  <select id="selectByExample" parameterType="com.zhangwenyu.bean.ResumeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from resume
    where student_id = #{studentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from resume
    where student_id = #{studentId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zhangwenyu.bean.ResumeExample">
    delete from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zhangwenyu.bean.Resume">
    insert into resume (student_id, resume_name, resume_url, 
      create_time, backup)
    values (#{studentId,jdbcType=VARCHAR}, #{resumeName,jdbcType=VARCHAR}, #{resumeUrl,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{backup,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zhangwenyu.bean.Resume">
    insert into resume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="resumeName != null">
        resume_name,
      </if>
      <if test="resumeUrl != null">
        resume_url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="backup != null">
        backup,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="resumeName != null">
        #{resumeName,jdbcType=VARCHAR},
      </if>
      <if test="resumeUrl != null">
        #{resumeUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="backup != null">
        #{backup,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zhangwenyu.bean.ResumeExample" resultType="java.lang.Long">
    select count(*) from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update resume
    <set>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.resumeName != null">
        resume_name = #{record.resumeName,jdbcType=VARCHAR},
      </if>
      <if test="record.resumeUrl != null">
        resume_url = #{record.resumeUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.backup != null">
        backup = #{record.backup,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update resume
    set student_id = #{record.studentId,jdbcType=VARCHAR},
      resume_name = #{record.resumeName,jdbcType=VARCHAR},
      resume_url = #{record.resumeUrl,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      backup = #{record.backup,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhangwenyu.bean.Resume">
    update resume
    <set>
      <if test="resumeName != null">
        resume_name = #{resumeName,jdbcType=VARCHAR},
      </if>
      <if test="resumeUrl != null">
        resume_url = #{resumeUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="backup != null">
        backup = #{backup,jdbcType=VARCHAR},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhangwenyu.bean.Resume">
    update resume
    set resume_name = #{resumeName,jdbcType=VARCHAR},
      resume_url = #{resumeUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      backup = #{backup,jdbcType=VARCHAR}
    where student_id = #{studentId,jdbcType=VARCHAR}
  </update>
</mapper>