<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhangwenyu.dao.EmploymentMapper">
  <resultMap id="BaseResultMap" type="com.zhangwenyu.bean.Employment">
    <id column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="student_dept" jdbcType="VARCHAR" property="studentDept" />
    <result column="student_major" jdbcType="VARCHAR" property="studentMajor" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="company_property" jdbcType="VARCHAR" property="companyProperty" />
    <result column="company_category" jdbcType="VARCHAR" property="companyCategory" />
    <result column="company_provinces" jdbcType="VARCHAR" property="companyProvinces" />
    <result column="company_city" jdbcType="VARCHAR" property="companyCity" />
    <result column="company_address" jdbcType="VARCHAR" property="companyAddress" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="job_counterpart" jdbcType="INTEGER" property="jobCounterpart" />
    <result column="sign_time" jdbcType="VARCHAR" property="signTime" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="company_man" jdbcType="VARCHAR" property="companyMan" />
    <result column="man_phone" jdbcType="VARCHAR" property="manPhone" />
    <result column="man_telephone" jdbcType="VARCHAR" property="manTelephone" />
    <result column="man_email" jdbcType="VARCHAR" property="manEmail" />
    <result column="company_postcode" jdbcType="VARCHAR" property="companyPostcode" />
    <result column="money" jdbcType="VARCHAR" property="money" />
    <result column="check_man" jdbcType="VARCHAR" property="checkMan" />
    <result column="chaeck_time" jdbcType="VARCHAR" property="chaeckTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="backup" jdbcType="VARCHAR" property="backup" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    student_id, student_name, student_dept, student_major, company_name, company_property, 
    company_category, company_provinces, company_city, company_address, job_name, job_counterpart, 
    sign_time, create_time, company_man, man_phone, man_telephone, man_email, company_postcode, 
    money, check_man, chaeck_time, status, remark, backup
  </sql>
  <select id="selectByExample" parameterType="com.zhangwenyu.bean.EmploymentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>


  <select id="countByCondition" resultType="long">
    select count(*) from employment where
    status = 1 and student_dept=#{studentDept,jdbcType=VARCHAR} and backup=#{year}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employment
    where student_id = #{studentId,jdbcType=VARCHAR}
  </select>


  <select id="searchByCondition" parameterType="com.zhangwenyu.bean.Employment" resultMap="BaseResultMap">
    select * from employment where 1=1

    <if test="studentId!=null">
      <if test="studentId!=''">
        and student_id  LIKE CONCAT(CONCAT('%',#{studentId},'%'))
      </if>
    </if>
    <if test="studentName!=null">
      <if test="studentName!=''">
        and student_name  LIKE CONCAT(CONCAT('%',#{studentName},'%'))
      </if>
    </if>
    <if test="studentDept!=null">
      <if test="studentDept!=''">
        and student_dept = #{studentDept,jdbcType=VARCHAR}
      </if>
    </if>
    <if test="status != null ">
      <if test="status != -1">
        and status = #{status,jdbcType=INTEGER}
      </if>
    </if>

    order by status asc
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from employment
    where student_id = #{studentId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zhangwenyu.bean.EmploymentExample">
    delete from employment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zhangwenyu.bean.Employment">
    insert into employment (student_id, student_name, student_dept, 
      student_major, company_name, company_property, 
      company_category, company_provinces, company_city, 
      company_address, job_name, job_counterpart, 
      sign_time, create_time, company_man, 
      man_phone, man_telephone, man_email, 
      company_postcode, money, check_man, 
      chaeck_time, status, remark, 
      backup)
    values (#{studentId,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, #{studentDept,jdbcType=VARCHAR}, 
      #{studentMajor,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, #{companyProperty,jdbcType=VARCHAR}, 
      #{companyCategory,jdbcType=VARCHAR}, #{companyProvinces,jdbcType=VARCHAR}, #{companyCity,jdbcType=VARCHAR}, 
      #{companyAddress,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR}, #{jobCounterpart,jdbcType=INTEGER}, 
      #{signTime,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{companyMan,jdbcType=VARCHAR}, 
      #{manPhone,jdbcType=VARCHAR}, #{manTelephone,jdbcType=VARCHAR}, #{manEmail,jdbcType=VARCHAR}, 
      #{companyPostcode,jdbcType=VARCHAR}, #{money,jdbcType=VARCHAR}, #{checkMan,jdbcType=VARCHAR}, 
      #{chaeckTime,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{backup,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zhangwenyu.bean.Employment">
    insert into employment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="studentDept != null">
        student_dept,
      </if>
      <if test="studentMajor != null">
        student_major,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="companyProperty != null">
        company_property,
      </if>
      <if test="companyCategory != null">
        company_category,
      </if>
      <if test="companyProvinces != null">
        company_provinces,
      </if>
      <if test="companyCity != null">
        company_city,
      </if>
      <if test="companyAddress != null">
        company_address,
      </if>
      <if test="jobName != null">
        job_name,
      </if>
      <if test="jobCounterpart != null">
        job_counterpart,
      </if>
      <if test="signTime != null">
        sign_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="companyMan != null">
        company_man,
      </if>
      <if test="manPhone != null">
        man_phone,
      </if>
      <if test="manTelephone != null">
        man_telephone,
      </if>
      <if test="manEmail != null">
        man_email,
      </if>
      <if test="companyPostcode != null">
        company_postcode,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="checkMan != null">
        check_man,
      </if>
      <if test="chaeckTime != null">
        chaeck_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="backup != null">
        backup,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentDept != null">
        #{studentDept,jdbcType=VARCHAR},
      </if>
      <if test="studentMajor != null">
        #{studentMajor,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyProperty != null">
        #{companyProperty,jdbcType=VARCHAR},
      </if>
      <if test="companyCategory != null">
        #{companyCategory,jdbcType=VARCHAR},
      </if>
      <if test="companyProvinces != null">
        #{companyProvinces,jdbcType=VARCHAR},
      </if>
      <if test="companyCity != null">
        #{companyCity,jdbcType=VARCHAR},
      </if>
      <if test="companyAddress != null">
        #{companyAddress,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobCounterpart != null">
        #{jobCounterpart,jdbcType=INTEGER},
      </if>
      <if test="signTime != null">
        #{signTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="companyMan != null">
        #{companyMan,jdbcType=VARCHAR},
      </if>
      <if test="manPhone != null">
        #{manPhone,jdbcType=VARCHAR},
      </if>
      <if test="manTelephone != null">
        #{manTelephone,jdbcType=VARCHAR},
      </if>
      <if test="manEmail != null">
        #{manEmail,jdbcType=VARCHAR},
      </if>
      <if test="companyPostcode != null">
        #{companyPostcode,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=VARCHAR},
      </if>
      <if test="checkMan != null">
        #{checkMan,jdbcType=VARCHAR},
      </if>
      <if test="chaeckTime != null">
        #{chaeckTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="backup != null">
        #{backup,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zhangwenyu.bean.EmploymentExample" resultType="java.lang.Long">
    select count(*) from employment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employment
    <set>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentName != null">
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.studentDept != null">
        student_dept = #{record.studentDept,jdbcType=VARCHAR},
      </if>
      <if test="record.studentMajor != null">
        student_major = #{record.studentMajor,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyProperty != null">
        company_property = #{record.companyProperty,jdbcType=VARCHAR},
      </if>
      <if test="record.companyCategory != null">
        company_category = #{record.companyCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.companyProvinces != null">
        company_provinces = #{record.companyProvinces,jdbcType=VARCHAR},
      </if>
      <if test="record.companyCity != null">
        company_city = #{record.companyCity,jdbcType=VARCHAR},
      </if>
      <if test="record.companyAddress != null">
        company_address = #{record.companyAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.jobName != null">
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobCounterpart != null">
        job_counterpart = #{record.jobCounterpart,jdbcType=INTEGER},
      </if>
      <if test="record.signTime != null">
        sign_time = #{record.signTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.companyMan != null">
        company_man = #{record.companyMan,jdbcType=VARCHAR},
      </if>
      <if test="record.manPhone != null">
        man_phone = #{record.manPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.manTelephone != null">
        man_telephone = #{record.manTelephone,jdbcType=VARCHAR},
      </if>
      <if test="record.manEmail != null">
        man_email = #{record.manEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.companyPostcode != null">
        company_postcode = #{record.companyPostcode,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=VARCHAR},
      </if>
      <if test="record.checkMan != null">
        check_man = #{record.checkMan,jdbcType=VARCHAR},
      </if>
      <if test="record.chaeckTime != null">
        chaeck_time = #{record.chaeckTime,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.backup != null">
        backup = #{record.backup,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employment
    set student_id = #{record.studentId,jdbcType=VARCHAR},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      student_dept = #{record.studentDept,jdbcType=VARCHAR},
      student_major = #{record.studentMajor,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      company_property = #{record.companyProperty,jdbcType=VARCHAR},
      company_category = #{record.companyCategory,jdbcType=VARCHAR},
      company_provinces = #{record.companyProvinces,jdbcType=VARCHAR},
      company_city = #{record.companyCity,jdbcType=VARCHAR},
      company_address = #{record.companyAddress,jdbcType=VARCHAR},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_counterpart = #{record.jobCounterpart,jdbcType=INTEGER},
      sign_time = #{record.signTime,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      company_man = #{record.companyMan,jdbcType=VARCHAR},
      man_phone = #{record.manPhone,jdbcType=VARCHAR},
      man_telephone = #{record.manTelephone,jdbcType=VARCHAR},
      man_email = #{record.manEmail,jdbcType=VARCHAR},
      company_postcode = #{record.companyPostcode,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=VARCHAR},
      check_man = #{record.checkMan,jdbcType=VARCHAR},
      chaeck_time = #{record.chaeckTime,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      backup = #{record.backup,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhangwenyu.bean.Employment">
    update employment
    <set>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentDept != null">
        student_dept = #{studentDept,jdbcType=VARCHAR},
      </if>
      <if test="studentMajor != null">
        student_major = #{studentMajor,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyProperty != null">
        company_property = #{companyProperty,jdbcType=VARCHAR},
      </if>
      <if test="companyCategory != null">
        company_category = #{companyCategory,jdbcType=VARCHAR},
      </if>
      <if test="companyProvinces != null">
        company_provinces = #{companyProvinces,jdbcType=VARCHAR},
      </if>
      <if test="companyCity != null">
        company_city = #{companyCity,jdbcType=VARCHAR},
      </if>
      <if test="companyAddress != null">
        company_address = #{companyAddress,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobCounterpart != null">
        job_counterpart = #{jobCounterpart,jdbcType=INTEGER},
      </if>
      <if test="signTime != null">
        sign_time = #{signTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="companyMan != null">
        company_man = #{companyMan,jdbcType=VARCHAR},
      </if>
      <if test="manPhone != null">
        man_phone = #{manPhone,jdbcType=VARCHAR},
      </if>
      <if test="manTelephone != null">
        man_telephone = #{manTelephone,jdbcType=VARCHAR},
      </if>
      <if test="manEmail != null">
        man_email = #{manEmail,jdbcType=VARCHAR},
      </if>
      <if test="companyPostcode != null">
        company_postcode = #{companyPostcode,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=VARCHAR},
      </if>
      <if test="checkMan != null">
        check_man = #{checkMan,jdbcType=VARCHAR},
      </if>
      <if test="chaeckTime != null">
        chaeck_time = #{chaeckTime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="backup != null">
        backup = #{backup,jdbcType=VARCHAR},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhangwenyu.bean.Employment">
    update employment
    set student_name = #{studentName,jdbcType=VARCHAR},
      student_dept = #{studentDept,jdbcType=VARCHAR},
      student_major = #{studentMajor,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      company_property = #{companyProperty,jdbcType=VARCHAR},
      company_category = #{companyCategory,jdbcType=VARCHAR},
      company_provinces = #{companyProvinces,jdbcType=VARCHAR},
      company_city = #{companyCity,jdbcType=VARCHAR},
      company_address = #{companyAddress,jdbcType=VARCHAR},
      job_name = #{jobName,jdbcType=VARCHAR},
      job_counterpart = #{jobCounterpart,jdbcType=INTEGER},
      sign_time = #{signTime,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      company_man = #{companyMan,jdbcType=VARCHAR},
      man_phone = #{manPhone,jdbcType=VARCHAR},
      man_telephone = #{manTelephone,jdbcType=VARCHAR},
      man_email = #{manEmail,jdbcType=VARCHAR},
      company_postcode = #{companyPostcode,jdbcType=VARCHAR},
      money = #{money,jdbcType=VARCHAR},
      check_man = #{checkMan,jdbcType=VARCHAR},
      chaeck_time = #{chaeckTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      backup = #{backup,jdbcType=VARCHAR}
    where student_id = #{studentId,jdbcType=VARCHAR}
  </update>
</mapper>